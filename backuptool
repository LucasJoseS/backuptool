#! /usr/bin/python3
from pathlib import Path
from datetime import date
import shutil
import yaml
import os

from typing import Dict, AnyStr

class BackupTarget():
    def __init__(self, path: Path, category: AnyStr):
        if not isinstance(path, Path):
            path = Path(path)

        self.path       = path
        self.category   = category


def backup(target: BackupTarget, backup_root: Path):
    if not isinstance(backup_root, Path):
        backup_root = Path(backup_root)

    today = date.today()

    year_path  = backup_root / str(today.year)
    month_path = year_path / str(today.month)
    category_path = month_path / str(target.category)

    category_path.mkdir(exist_ok=True, parents=True)
    copy(target.path, category_path)

def copy(origin: Path, dest: Path):
    assert origin.is_absolute() and origin.exists()

    if dest.exists() and dest.is_dir():
        dest = dest / origin.name

    if origin.is_file():
        shutil.copy(origin, dest)
    else:
        shutil.copytree(origin, dest)

def get_config_file():
    home = os.getenv("HOME")
    config = Path(f"{home}/.config/backuptool.conf")

    if not config.exists():
        print(f"Config file not exist: {config}")
        exit(1)

    return config

if __name__ == "__main__":
    config = get_config_file()
    config = yaml.load(config.open(), yaml.loader.Loader)

    general_config: Dict    = config['general']
    categorys: Dict         = config['backup']

    for category, paths in categorys.items():
        for path in paths:
            backup(BackupTarget(path, category), general_config['backup-root-path'])
